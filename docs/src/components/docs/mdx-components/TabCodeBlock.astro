---
import ButtonCopyInTabCode from "@components/preact/ButtonCopyInTabCode";

interface Props {
  values: { text: string; value: string; icon?: string }[];
  showCopyBlock?: boolean;
  autoHeight?: boolean;
}

const { values, showCopyBlock, autoHeight } = Astro.props;

export const getIcon = (iconName: string) => {
  if (iconName === "unocss") return "i-fx-unocss-ico";
  else if (iconName === "ts") return "/icons/ts.svg";
  else if (iconName === "js") return "/icons/js.svg";
  else if (iconName === "html") return "/icons/html.svg";
  else if (iconName === "css") return "/icons/css.svg";
  else if (iconName === "astro") return "i-fx-astro-ico";
  else if (iconName === "tailwind") return "/icons/tailwind.svg";
  else if (iconName === "laravel") return "/icons/laravel.svg";
  else if (iconName === "symfony") return "i-fx-symphony-ico";
  else if (iconName === "shell") return "/icons/shell.svg";
  else if (iconName === "yarn") return "/icons/yarn.svg";
  else if (iconName === "npm") return "/icons/npm.svg";
  else if (iconName === "vite") return "/icons/vite.svg";
  else if (iconName === "vue") return "/icons/vue.svg";
};
---

<div
  data-tab-fx-site
  data-fx-tabs
  data-code-block
  class={`my4 first-mt0 last-mb0 flex flex-col w-full !b-0 !b-transparent
    ${autoHeight ? "" : "h96"}`}
>
  <div
    data-tab-list-wrapper
    class="rd-t-xl bg-white dark-bg-zinc950 flex items-center justify-between relative b b-zinc2/90 dark-b-zinc8/60
    text-sm text-zinc7 dark-text-zinc3 h12"
  >
    <ul
      data-tab-list
      role="tablist"
      data-scrollbar-hidden
      class="flex-1 hfull pl-1.5 flex items-center gap-x3 relative z20 text-zinc7 dark-text-zinc3"
    >
      {
        values.map((trigger) => (
          <li role="presentation" class="z5">
            <a
              data-tabs-trigger
              data-target={trigger.value}
              href={`#${trigger.value}`}
              role="tab"
              aria-controls={trigger.value}
              aria-label={`${trigger.value}`}
              class="relative flex items-center gap-x1 disabled-cursor-not-allowed disabled-op80 px3.5 py2 outline-none doc-tab-trigger doc-tab-indicator doc-tab-indicator-1"
            >
              {trigger.icon && trigger.icon !== "" ? (
                getIcon(trigger.icon)?.startsWith("/icons/") ? (
                  <img
                    src={getIcon(trigger.icon)}
                    alt={`icon - ${trigger.icon}`}
                    class="h4 wauto"
                    width="40"
                  />
                ) : (
                  <span
                    aria-hidden="true"
                    class={`flex text-sm ${getIcon(trigger.icon)}`}
                  />
                )
              ) : null}
              {trigger.text}
            </a>
          </li>
        ))
      }
    </ul>
    {showCopyBlock ? <ButtonCopyInTabCode client:load /> : null}
  </div>
  <div
    data-panels-container
    data-tab-code-content
    class={`
      children-b-t-0 children-b children-b-zinc2/90 children-dark-b-zinc8/60 children-rd-b-xl overflow-hidden flex-1 
      ${autoHeight ? "" : "hfull children-hfull"}
      `}
  >
    <slot />
  </div>
</div>
<style is:global>
  [data-tab-code-content] [data-code-component],  [data-box-code-lang] {
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
    border: 0px !important;
  }
</style>
