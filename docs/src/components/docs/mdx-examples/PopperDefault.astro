<div class="flex flex-col items-center gap-14">
    <div class="flex items-center justify-center w-full">
        <div
            data-reference-el
            class="w4/5 max-w80 h30 relative rd-md flex bg-zinc3 dark-bg-zinc7/50"
        >
        </div>
    </div>
    <div
        data-popper-el
        class="ui-popper p0.5 rd-md bg-zinc3 dark-bg-zinc8/70 text-white text-sm b b-zinc6 dark-b-zinc7/40 w46 h7 text-sm flex items-center justify-center text-center"
    >
        Bottom
    </div>
    <div class="flex flex-wrap justify-center gap3">
        <button
            data-trigger-popper
            data-set-placement="bottom"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Bottom
        </button>
        <button
            data-trigger-popper
            data-set-placement="bottom-start"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Bottom-start
        </button>
        <button
            data-trigger-popper
            data-set-placement="bottom-end"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Bottom-end
        </button>
        <button
            data-trigger-popper
            data-set-placement="top"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Top
        </button>
        <button
            data-trigger-popper
            data-set-placement="top-start"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Top-start
        </button>
        <button
            data-trigger-popper
            data-set-placement="top-end"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Top-end
        </button>
        <button
            data-trigger-popper
            data-set-placement="left"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Left
        </button>
        <button
            data-trigger-popper
            data-set-placement="left-start"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Left-start
        </button>
        <button
            data-trigger-popper
            data-set-placement="left-end"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Left-end
        </button>
        <button
            data-trigger-popper
            data-set-placement="right"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Right
        </button>
        <button
            data-trigger-popper
            data-set-placement="right-start"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Right-start
        </button>
        <button
            data-trigger-popper
            data-set-placement="right-end"
            class="bg-zinc8 text-white px-4 py-2 rounded-lg text-sm"
        >
            Right-end
        </button>
    </div>
</div>

<script>
    import { CreatePopper, type Placement } from "flexipop";

    const initPopperExample = () => {
        const triggers = Array.from(
            document.querySelectorAll("[data-trigger-popper]"),
        ) as HTMLButtonElement[];
        const popperEl = document.querySelector("[data-popper-el]");
        const reference = document.querySelector("[data-reference-el]");

        if (
            popperEl instanceof HTMLElement &&
            reference instanceof HTMLElement
        ) {
            let currentPosition: Placement = "bottom";
            const popper = new CreatePopper(reference, popperEl, {
                placement: currentPosition,
            });
            popper.updatePosition();
            for (const trigger of triggers) {
                trigger.addEventListener("click", () => {
                    const position = trigger.getAttribute(
                        "data-set-placement",
                    ) as Placement;
                    if (position !== currentPosition) {
                        popperEl.innerHTML = position;
                        popperEl.style.opacity = "0";
                        // change placment here
                        popper.setOptions({
                            placement: position,
                        });
                        currentPosition = position;
                        popperEl.style.opacity = "1";
                    }
                });
            }
        }
    };
    initPopperExample();
    document.addEventListener("astro:after-swap", initPopperExample);
</script>
