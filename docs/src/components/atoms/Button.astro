---
import { cn } from "@lib/utils";
import type { HTMLAttributes } from "astro/types";
import { cva } from "class-variance-authority";

import type { VariantProps } from "class-variance-authority";

interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof buttonVariants> {}

export const buttonVariants = cva("flex items-center relative text-sm", {
  variants: {
    variant: {
      default:
        "bg-gradient-to-t from-zinc9 to-zinc7 dark-from-zinc50 dark-to-zinc200 text-white dark-text-zinc9",
      gradient:
        "bg-gradient-to-t from-zinc50 to-zinc1 dark-from-zinc950/80 dark-to-zinc9 b b-zinc2/80 dark-b-zinc8/90",
      flat:"text-zinc8 dark-text-zinc2 hover-bg-zinc2/60 dark-hover-bg-zinc-8/60 active-bg-zinc2/40 dark-active-bg-zinc8/30"
    },
    size: {
      default: "h11 px6",
      md: "h9 px5",
      sm: "h8 px4",
      xs:"h7 px4",
      icon: "w12 h12",
      "icons-md": "w11 h11 justify-center",
      "icons-sm": "w8 h8 justify-center",
    },
    radius: {
      default: "rd-xl",
      lg: "rd-lg",
      md: "rd-md",
      sm:"rd-sm",
    },
  },
  defaultVariants: {
    variant: "default",
    size: "default",
    radius: "default",
  },
});

const { class: className, variant, size, radius, ...props } = Astro.props;
---

<button
  class={`${cn(buttonVariants({ variant, size, radius }), className)}`}
  {...props}
>
  <slot />
</button>
