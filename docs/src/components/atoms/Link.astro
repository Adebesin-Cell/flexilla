---
import type { HTMLAttributes } from "astro/types";
import { cn } from "@lib/utils";
import { buttonVariants } from "./Button.astro";
import type { VariantProps } from "class-variance-authority";

interface Props
  extends HTMLAttributes<"a">,
    VariantProps<typeof buttonVariants> {
  href: string;
}
const {
  class: className,
  variant,
  size,
  href,
  "aria-label": label,
  ...props
} = Astro.props;
const href_ = href;
---

{
  (href_ && href_.startsWith("/")) || (href_ && href_.startsWith("#")) ? (
    <a
      href={href}
      aria-label={!label || label === "" ? `Link to ${href}` : label}
      class={`${cn(buttonVariants({ variant, size }), className)}`}
      {...props}
    >
      <slot />
    </a>
  ) : (
    <a
      href={href_}
      aria-label={!label || label === "" ? `Link to ${href}` : label}
      target="_blank"
      rel="noopener noreferrer"
      class={`${cn(buttonVariants({ variant, size }), className)}`}
      {...props}
    >
      <slot />
    </a>
  )
}
